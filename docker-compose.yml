version: '3.8'

services:
  # Infrastructure Services
  postgres:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: caremanagement
      POSTGRES_USER: caremanagement
      POSTGRES_PASSWORD: caremanagement123
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U caremanagement"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    ports:
      - "5672:5672"    # AMQP port
      - "15672:15672"  # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: caremanagement
      RABBITMQ_DEFAULT_PASS: caremanagement123
      RABBITMQ_DEFAULT_TAGS: management,administrator
      RABBITMQ_ERLANG_COOKIE: rabbitmq_cookie_secret
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Gateway
  gateway:
    build:
      context: .
      dockerfile: src/Gateway/CareManagement.Gateway/Dockerfile
    ports:
      - "5003:80"  # Changed from 5000 to 5003 to avoid macOS AirPlay conflict
    depends_on:
      - auth-service
      - staff-service
      - client-service
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80

  # Microservices
  auth-service:
    build:
      context: ./backend-dotnet
      dockerfile: src/Services/Auth/CareManagement.Auth.Api/Dockerfile
    ports:
      - "5001:5001"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5001
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=CareManagement_Auth;Username=caremanagement;Password=caremanagement123
      - ConnectionStrings__RabbitMQ=amqp://caremanagement:caremanagement123@rabbitmq:5672/
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  staff-service:
    build:
      context: ./backend-dotnet
      dockerfile: src/Services/Staff/CareManagement.Staff.Api/Dockerfile
    ports:
      - "5002:5002"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5002
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=CareManagement_Staff;Username=caremanagement;Password=caremanagement123
      - ConnectionStrings__RabbitMQ=amqp://caremanagement:caremanagement123@rabbitmq:5672/
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  client-service:
    build:
      context: ./backend-dotnet
      dockerfile: src/Services/Client/CareManagement.Client.Api/Dockerfile
    ports:
      - "5004:5004"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5004
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=CareManagement_Client;Username=caremanagement;Password=caremanagement123
      - ConnectionStrings__RabbitMQ=amqp://caremanagement:caremanagement123@rabbitmq:5672/
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

volumes:
  postgres_data:
  rabbitmq_data:
